import './styles/main.css';

// –ò–º–ø–æ—Ä—Ç –∞–≥–µ–Ω—Ç–æ–≤ CREW AI
import { UXAgent } from './agents/ux-agent.js';
import { UIAgent } from './agents/ui-agent.js';
import { ContentAgent } from './agents/content-agent.js';
import { SEOAgent } from './agents/seo-agent.js';
import { TechAgent } from './agents/tech-agent.js';

// –ò–º–ø–æ—Ä—Ç MCP –º–æ–¥—É–ª–µ–π
import { SEOMCP } from './mcp/seo-mcp.js';
import { UIMCP } from './mcp/ui-mcp.js';
import { FormMCP } from './mcp/form-mcp.js';
import { LogicMCP } from './mcp/logic-mcp.js';

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–≥–µ–Ω—Ç–æ–≤
const uxAgent = new UXAgent();
const uiAgent = new UIAgent();
const contentAgent = new ContentAgent();
const seoAgent = new SEOAgent();
const techAgent = new TechAgent();

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è MCP –º–æ–¥—É–ª–µ–π
const seoMCP = new SEOMCP();
const uiMCP = new UIMCP();
const formMCP = new FormMCP();
const logicMCP = new LogicMCP();

// –û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
class LegionApp {
  constructor() {
    this.initializeAgents();
    this.bindEvents();
    this.applySEO();
    this.trackPageLoad();
  }

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–≥–µ–Ω—Ç–æ–≤
  initializeAgents() {
    console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–≥–µ–Ω—Ç–æ–≤ CREW AI...');
    
    // –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä–∞—Ç–µ–≥–∏—é UX
    const userFlow = uxAgent.designUserFlow();
    console.log('UX Flow:', userFlow);
    
    // –ü–æ–ª—É—á–∞–µ–º —Ü–≤–µ—Ç–æ–≤—É—é —Å—Ö–µ–º—É
    const colors = uiAgent.getColorScheme();
    console.log('UI Colors:', colors);
    
    // –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç
    const heroContent = contentAgent.getHeroContent();
    console.log('Hero Content:', heroContent);
    
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
    const techSpecs = techAgent.getArchitecture();
    console.log('Tech Specs:', techSpecs);
    
    console.log('‚úÖ –ê–≥–µ–Ω—Ç—ã CREW AI –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
  }

  // –ü—Ä–∏–≤—è–∑–∫–∞ —Å–æ–±—ã—Ç–∏–π
  bindEvents() {
    // –ö–Ω–æ–ø–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–æ—Ä–º—ã –≤ hero
    const openFormBtn = document.querySelector('[data-action="open-form"]');
    if (openFormBtn) {
      openFormBtn.addEventListener('click', () => this.openModal());
    }

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    const closeModalBtn = document.querySelector('[data-action="close-modal"]');
    if (closeModalBtn) {
      closeModalBtn.addEventListener('click', () => this.closeModal());
    }

    // –ö–ª–∏–∫ –≤–Ω–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    document.addEventListener('click', (e) => {
      if (e.target.id === 'formModal') {
        this.closeModal();
      }
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–æ—Ä–º—ã
    const contactForm = document.getElementById('contactForm');
    if (contactForm) {
      contactForm.addEventListener('submit', (e) => this.handleFormSubmit(e, 'main'));
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –º–æ–¥–∞–ª—å–Ω–æ–π —Ñ–æ—Ä–º—ã
    const modalForm = document.getElementById('modalForm');
    if (modalForm) {
      modalForm.addEventListener('submit', (e) => this.handleFormSubmit(e, 'modal'));
    }

    // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
    this.setupPhoneValidation();
  }

  // –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  openModal() {
    const modal = document.getElementById('formModal');
    if (modal) {
      modal.classList.add('active');
      document.body.style.overflow = 'hidden';
      
      // –§–æ–∫—É—Å –Ω–∞ –ø–µ—Ä–≤–æ–µ –ø–æ–ª–µ
      setTimeout(() => {
        const firstInput = modal.querySelector('input');
        if (firstInput) firstInput.focus();
      }, 100);
      
      // –¢—Ä–µ–∫–∏–Ω–≥ —Å–æ–±—ã—Ç–∏—è
      logicMCP.trackConversion('modal_open', 'hero_cta');
    }
  }

  // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  closeModal() {
    const modal = document.getElementById('formModal');
    if (modal) {
      modal.classList.remove('active');
      document.body.style.overflow = '';
    }
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
  async handleFormSubmit(e, formType) {
    e.preventDefault();
    
    const form = e.target;
    const formData = new FormData(form);
    const data = Object.fromEntries(formData.entries());
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è —á–µ—Ä–µ–∑ FormMCP
    const validation = formMCP.validateForm(data);
    if (!validation.isValid) {
      this.showError(validation.errors.join('\n'));
      return;
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
    const submitBtn = form.querySelector('button[type="submit"]');
    const originalText = submitBtn.textContent;
    submitBtn.textContent = '–û—Ç–ø—Ä–∞–≤–∫–∞...';
    submitBtn.disabled = true;
    
    try {
      // –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã —á–µ—Ä–µ–∑ FormMCP
      const result = await formMCP.submitForm(data);
      
      if (result.success) {
        this.showSuccess(result.message);
        form.reset();
        
        // –¢—Ä–µ–∫–∏–Ω–≥ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏
        logicMCP.trackConversion('form_submit', formType);
        
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –µ—Å–ª–∏ —ç—Ç–æ –º–æ–¥–∞–ª—å–Ω–∞—è —Ñ–æ—Ä–º–∞
        if (formType === 'modal') {
          this.closeModal();
        }
      }
    } catch (error) {
      this.showError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ä–º—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
      console.error('Form submission error:', error);
    } finally {
      // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
      submitBtn.textContent = originalText;
      submitBtn.disabled = false;
    }
  }

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
  setupPhoneValidation() {
    const phoneInputs = document.querySelectorAll('input[type="tel"]');
    
    phoneInputs.forEach(input => {
      input.addEventListener('input', (e) => {
        let value = e.target.value.replace(/\D/g, '');
        
        if (value.length > 0) {
          if (value.length <= 3) {
            value = `+7 (${value}`;
          } else if (value.length <= 6) {
            value = `+7 (${value.slice(0, 3)}) ${value.slice(3)}`;
          } else if (value.length <= 8) {
            value = `+7 (${value.slice(0, 3)}) ${value.slice(3, 6)}-${value.slice(6)}`;
          } else {
            value = `+7 (${value.slice(0, 3)}) ${value.slice(3, 6)}-${value.slice(6, 8)}-${value.slice(8, 10)}`;
          }
        }
        
        e.target.value = value;
      });
    });
  }

  // –ü–æ–∫–∞–∑ –æ—à–∏–±–∫–∏
  showError(message) {
    alert(`–û—à–∏–±–∫–∞: ${message}`);
  }

  // –ü–æ–∫–∞–∑ —É—Å–ø–µ—Ö–∞
  showSuccess(message) {
    alert(`–£—Å–ø–µ—à–Ω–æ: ${message}`);
  }

  // –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ SEO –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
  applySEO() {
    console.log('üîç –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ SEO –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏...');
    
    const metaContent = seoAgent.getMetaTags();
    const structuredData = seoAgent.getStructuredData();
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    const schemaScript = seoMCP.generateStructuredData(structuredData);
    document.head.insertAdjacentHTML('beforeend', schemaScript);
    
    console.log('‚úÖ SEO –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∞');
  }

  // –¢—Ä–µ–∫–∏–Ω–≥ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  trackPageLoad() {
    logicMCP.trackConversion('page_load', 'homepage');
    console.log('üìä –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞, —Ç—Ä–µ–∫–∏–Ω–≥ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω');
  }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ DOM
document.addEventListener('DOMContentLoaded', () => {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Legion...');
  new LegionApp();
  console.log('‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Legion —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–æ!');
});

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
export {
  uxAgent,
  uiAgent,
  contentAgent,
  seoAgent,
  techAgent,
  seoMCP,
  uiMCP,
  formMCP,
  logicMCP,
  LegionApp
};

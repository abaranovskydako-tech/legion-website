/**
 * Tripwire Component - –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Ç—Ä–∏–ø–≤–∞–π–µ—Ä–∞ –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –∫–æ–Ω–≤–µ—Ä—Å–∏–∏
 * –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –±–∞–Ω–Ω–µ—Ä –¥–ª—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ —Å —Ñ–æ—Ä–º–æ–π –∑–∞—Ö–≤–∞—Ç–∞
 */
export class Tripwire {
  constructor(container, options = {}) {
    this.container = container;
    this.options = {
      title: options.title || '–ü–æ–ª—É—á–∏—Ç–µ –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –ø–æ –ø–æ–¥–±–æ—Ä—É –ø–µ—Ä—Å–æ–Ω–∞–ª–∞',
      subtitle: options.subtitle || '15 –º–∏–Ω—É—Ç',
      buttonText: options.buttonText || '–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É',
      modalTitle: options.modalTitle || '–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è',
      ...options
    };
    
    this.init();
  }

  init() {
    this.render();
    this.bindEvents();
  }

  render() {
    // –°–æ–∑–¥–∞–µ–º HTML –¥–ª—è —Ç—Ä–∏–ø–≤–∞–π–µ—Ä–∞
    this.container.innerHTML = `
      <div class="tripwire" data-component="tripwire">
        <div class="tripwire__content">
          <div class="tripwire__icon">üéØ</div>
          <div class="tripwire__text">
            <h3 class="tripwire__title">${this.options.title}</h3>
            <p class="tripwire__subtitle">${this.options.subtitle}</p>
            <p class="tripwire__description">
              –ù–∞—à —ç–∫—Å–ø–µ—Ä—Ç –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤–∞—à–∏ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ –∏ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç 
              –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è –ø–æ–¥–±–æ—Ä–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞
            </p>
          </div>
          <button class="tripwire__button" data-action="open-tripwire">
            ${this.options.buttonText}
          </button>
        </div>
      </div>
    `;

    // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è —Ñ–æ—Ä–º—ã
    this.createModal();
  }

  createModal() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    if (document.getElementById('tripwire-modal')) return;

    const modalHTML = `
      <div id="tripwire-modal" class="modal-backdrop" role="dialog" aria-modal="true" aria-labelledby="tripwireTitle">
        <div class="modal tripwire-modal">
          <div class="modal-header">
            <h3 id="tripwireTitle">${this.options.modalTitle}</h3>
            <button class="modal-close" data-action="close-tripwire" aria-label="–ó–∞–∫—Ä—ã—Ç—å">‚úï</button>
          </div>
          <div class="modal-body">
            <form class="form tripwire-form" novalidate>
              <div class="form-group">
                <label for="tripwire-name" class="form-label">–í–∞—à–µ –∏–º—è</label>
                <input 
                  type="text" 
                  id="tripwire-name" 
                  name="name" 
                  class="form-input" 
                  placeholder="–ò–º—è" 
                  required
                />
              </div>
              <div class="form-group">
                <label for="tripwire-phone" class="form-label">–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞</label>
                <input 
                  type="tel" 
                  id="tripwire-phone" 
                  name="phone" 
                  class="form-input" 
                  placeholder="+7 (___) ___-__-__" 
                  inputmode="tel" 
                  required
                />
              </div>
              <div class="form-group">
                <label for="tripwire-company" class="form-label">–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏</label>
                <input 
                  type="text" 
                  id="tripwire-company" 
                  name="company" 
                  class="form-input" 
                  placeholder="–ö–æ–º–ø–∞–Ω–∏—è" 
                  required
                />
              </div>
              <div class="form-group">
                <label for="tripwire-needs" class="form-label">–û–ø–∏—à–∏—Ç–µ –≤–∞—à–∏ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏</label>
                <textarea 
                  id="tripwire-needs" 
                  name="needs" 
                  class="form-textarea" 
                  placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –Ω—É–∂–Ω—ã –≥—Ä—É–∑—á–∏–∫–∏ –Ω–∞ —Å–∫–ª–∞–¥, 10 —á–µ–ª–æ–≤–µ–∫, –Ω–∞ 2 –Ω–µ–¥–µ–ª–∏"
                  rows="3"
                ></textarea>
              </div>
              <button type="submit" class="btn btn-primary btn-full">
                –ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é
              </button>
              <small class="form-note">
                –ù–∞–∂–∏–º–∞—è –∫–Ω–æ–ø–∫—É, –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å –ø–æ–ª–∏—Ç–∏–∫–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
              </small>
            </form>
          </div>
        </div>
      </div>
    `;

    document.body.insertAdjacentHTML('beforeend', modalHTML);
  }

  bindEvents() {
    // –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    this.container.addEventListener('click', (e) => {
      if (e.target.matches('[data-action="open-tripwire"]')) {
        this.openModal();
      }
    });

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    document.addEventListener('click', (e) => {
      if (e.target.matches('[data-action="close-tripwire"]') || 
          e.target.id === 'tripwire-modal') {
        this.closeModal();
      }
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
    document.addEventListener('submit', (e) => {
      if (e.target.matches('.tripwire-form')) {
        e.preventDefault();
        this.handleFormSubmit(e.target);
      }
    });
  }

  openModal() {
    const modal = document.getElementById('tripwire-modal');
    if (modal) {
      modal.style.display = 'flex';
      document.body.style.overflow = 'hidden';
      
      // –§–æ–∫—É—Å –Ω–∞ –ø–µ—Ä–≤–æ–µ –ø–æ–ª–µ –≤–≤–æ–¥–∞
      setTimeout(() => {
        const nameInput = modal.querySelector('#tripwire-name');
        if (nameInput) nameInput.focus();
      }, 100);
    }
  }

  closeModal() {
    const modal = document.getElementById('tripwire-modal');
    if (modal) {
      modal.style.display = 'none';
      document.body.style.overflow = '';
    }
  }

  handleFormSubmit(form) {
    const formData = new FormData(form);
    const data = Object.fromEntries(formData.entries());

    // –ü—Ä–æ—Å—Ç–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è
    if (!data.name || !data.phone || !data.company) {
      alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è');
      return;
    }

    if (data.phone.length < 10) {
      alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞');
      return;
    }

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ª–∏–¥
    this.saveLead({ 
      ...data, 
      source: 'tripwire', 
      timestamp: new Date().toISOString() 
    });

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É—Å–ø–µ—à–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    this.showSuccessMessage();
  }

  saveLead(data) {
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage (–∏–º–∏—Ç–∞—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä)
    const leads = JSON.parse(localStorage.getItem('leads') || '[]');
    leads.push(data);
    localStorage.setItem('leads', JSON.stringify(data));
    
    console.log('Tripwire lead saved:', data);
  }

  showSuccessMessage() {
    const modal = document.getElementById('tripwire-modal');
    if (modal) {
      const modalBody = modal.querySelector('.modal-body');
      modalBody.innerHTML = `
        <div class="success-message">
          <div class="success-icon">üéâ</div>
          <h4>–ó–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞!</h4>
          <p>–ù–∞—à —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 10 –º–∏–Ω—É—Ç –¥–ª—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏.</p>
          <p>–ú—ã –ø–æ–¥–≥–æ—Ç–æ–≤–∏–º –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–æ –ø–æ–¥–±–æ—Ä—É –ø–µ—Ä—Å–æ–Ω–∞–ª–∞ –¥–ª—è –≤–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏.</p>
          <button class="btn btn-primary" data-action="close-tripwire">–ó–∞–∫—Ä—ã—Ç—å</button>
        </div>
      `;
    }
  }
}

from dotenv import load_dotenv
import os
from langchain_openai import ChatOpenAI
from langchain.schema import HumanMessage, SystemMessage
import logging

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler('seo_crew.log'),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger(__name__)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º LLM —Å –ø—Ä–æ–∫—Å–∏ API
llm = ChatOpenAI(
    model="gpt-4o-mini",
    api_key=os.getenv("OPENAI_API_KEY"),
    base_url=os.getenv("OPENAI_API_BASE"),
    temperature=0.7,
    verbose=True
)

def analyze_business_idea(business_idea):
    """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –±–∏–∑–Ω–µ—Å-–∏–¥–µ—é –∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∫–ª—é—á–µ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –ª–µ–Ω–¥–∏–Ω–≥–∞"""
    logger.info("üîç Idea Analyst: –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –±–∏–∑–Ω–µ—Å-–∏–¥–µ—é...")
    
    system_prompt = """–¢—ã –æ–ø—ã—Ç–Ω—ã–π –±–∏–∑–Ω–µ—Å-–∞–Ω–∞–ª–∏—Ç–∏–∫ —Å 10+ –ª–µ—Ç –æ–ø—ã—Ç–∞ –≤ –∞–Ω–∞–ª–∏–∑–µ —Å—Ç–∞—Ä—Ç–∞–ø–æ–≤ –∏ –±–∏–∑–Ω–µ—Å-–∏–¥–µ–π. 
    –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –±–∏–∑–Ω–µ—Å-–∏–¥–µ—é –∏ –æ–ø—Ä–µ–¥–µ–ª–∏:
    1. –û—Å–Ω–æ–≤–Ω—É—é —Ü–µ–Ω–Ω–æ—Å—Ç—å –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤
    2. –ö–ª—é—á–µ–≤—ã–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞
    3. –¶–µ–ª–µ–≤—É—é –∞—É–¥–∏—Ç–æ—Ä–∏—é
    4. –û—Å–Ω–æ–≤–Ω—ã–µ –±–æ–ª–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ä–µ—à–∞–µ—Ç –ø—Ä–æ–¥—É–∫—Ç
    5. –ü—Ä–∏–∑—ã–≤—ã –∫ –¥–µ–π—Å—Ç–≤–∏—é (CTA)
    
    –í—ã–¥–∞–π —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON."""
    
    messages = [
        SystemMessage(content=system_prompt),
        HumanMessage(content=f"–ë–∏–∑–Ω–µ—Å-–∏–¥–µ—è: {business_idea}")
    ]
    
    response = llm.invoke(messages)
    logger.info("‚úÖ Idea Analyst: –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω")
    return response.content

def create_seo_landing(business_idea):
    """–°–æ–∑–¥–∞–µ—Ç SEO-–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ª–µ–Ω–¥–∏–Ω–≥ –Ω–∞ –æ—Å–Ω–æ–≤–µ –±–∏–∑–Ω–µ—Å-–∏–¥–µ–∏"""
    try:
        logger.info(f"üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –ª–µ–Ω–¥–∏–Ω–≥–∞ –¥–ª—è –∏–¥–µ–∏: {business_idea[:100]}...")
        
        # –®–∞–≥ 1: –ê–Ω–∞–ª–∏–∑ –±–∏–∑–Ω–µ—Å-–∏–¥–µ–∏
        idea_analysis = analyze_business_idea(business_idea)
        print("\n=== –ê–ù–ê–õ–ò–ó –ë–ò–ó–ù–ï–°-–ò–î–ï–ò ===")
        print(idea_analysis)
        
        return idea_analysis
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ª–µ–Ω–¥–∏–Ω–≥–∞: {str(e)}")
        raise

if __name__ == "__main__":
    business_idea = """
    –ú—ã —Å–æ–∑–¥–∞–µ–º –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ª–∏—á–Ω—ã–º–∏ —Ñ–∏–Ω–∞–Ω—Å–∞–º–∏, 
    –∫–æ—Ç–æ—Ä–æ–µ –ø–æ–º–æ–≥–∞–µ—Ç –ª—é–¥—è–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Ä–∞—Å—Ö–æ–¥—ã, –ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –±—é–¥–∂–µ—Ç –∏ 
    –¥–æ—Å—Ç–∏–≥–∞—Ç—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö —Ü–µ–ª–µ–π —Å –ø–æ–º–æ—â—å—é –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞.
    """
    
    try:
        result = create_seo_landing(business_idea)
        print("\nüéâ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
